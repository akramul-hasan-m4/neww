package pojo;
// Generated Jan 30, 2018 1:20:41 AM by Hibernate Tools 4.3.1


import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Teachers generated by hbm2java
 */
@Entity
@Table(name="teachers"
    ,catalog="onlinexm"
)
public class Teachers  implements java.io.Serializable {


     private Integer teacherId;
     private Users users;
     private String isQuestioner;
     private Set questionBanks = new HashSet(0);
     private Set questionerDefinations = new HashSet(0);

    public Teachers() {
    }

    public Teachers(Users users, String isQuestioner, Set questionBanks, Set questionerDefinations) {
       this.users = users;
       this.isQuestioner = isQuestioner;
       this.questionBanks = questionBanks;
       this.questionerDefinations = questionerDefinations;
    }
   
     @Id @GeneratedValue(strategy=IDENTITY)

    
    @Column(name="teacher_id", unique=true, nullable=false)
    public Integer getTeacherId() {
        return this.teacherId;
    }
    
    public void setTeacherId(Integer teacherId) {
        this.teacherId = teacherId;
    }

@ManyToOne(fetch=FetchType.LAZY)
    @JoinColumn(name="user_id")
    public Users getUsers() {
        return this.users;
    }
    
    public void setUsers(Users users) {
        this.users = users;
    }

    
    @Column(name="is_questioner", length=45)
    public String getIsQuestioner() {
        return this.isQuestioner;
    }
    
    public void setIsQuestioner(String isQuestioner) {
        this.isQuestioner = isQuestioner;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teachers")
    public Set getQuestionBanks() {
        return this.questionBanks;
    }
    
    public void setQuestionBanks(Set questionBanks) {
        this.questionBanks = questionBanks;
    }

@OneToMany(fetch=FetchType.LAZY, mappedBy="teachers")
    public Set getQuestionerDefinations() {
        return this.questionerDefinations;
    }
    
    public void setQuestionerDefinations(Set questionerDefinations) {
        this.questionerDefinations = questionerDefinations;
    }




}


